{
	"info": {
		"_postman_id": "15737666-b5ac-412c-925a-d78694a6d665",
		"name": "Trello API Assignment 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// save board's id\r",
							"let response = pm.response.json();\r",
							"pm.collectionVariables.set(\"idBoard\", response.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// pm.environment.set(\"boardName\", parseInt(Math.random()*1000));\r",
							"\r",
							"let x = pm.environment.get(\"boardName\");\r",
							"if (x){\r",
							"    x++;\r",
							"}else{\r",
							"    x =1;\r",
							"}\r",
							"\r",
							"pm.environment.set(\"boardName\", x)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?key={{trelloKey}}&token={{trelloToken}}&name=My Board Num: {{boardName}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "My Board Num: {{boardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check list name\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.name).to.eql(\"TODO\");\r",
							"});\r",
							"// save list's id\r",
							"let response = pm.response.json();\r",
							"pm.collectionVariables.set(\"idList_TODO\", response.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id/lists?key={{trelloKey}}&token={{trelloToken}}&name=TODO",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "TODO"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check list name\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.name).to.eql(\"DONE\");\r",
							"});\r",
							"pm.test(\"Check list closed\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Check list created in desired board\", function () {\r",
							"    let response = pm.response.json();\r",
							"    let boardId = pm.collectionVariables.get(\"idBoard\");\r",
							"    pm.expect(response.idBoard).to.eql(boardId);\r",
							"});\r",
							"\r",
							"// save list's id\r",
							"let response = pm.response.json();\r",
							"pm.collectionVariables.set(\"idList_DONE\", response.id);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id/lists?key={{trelloKey}}&token={{trelloToken}}&name=DONE",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "DONE"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBoard}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a card in TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check card name\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.name).to.eql(\"Learn Postman\");\r",
							"});\r",
							"pm.test(\"Check card closed\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"// optional \r",
							"pm.test(\"Check card created in desired list\", function () {\r",
							"    let response = pm.response.json();\r",
							"    let listId = pm.collectionVariables.get(\"idList_TODO\");\r",
							"    pm.expect(response.idList).to.eql(listId);\r",
							"});\r",
							"\r",
							"pm.test(\"Check card created in desired board\", function () {\r",
							"    let response = pm.response.json();\r",
							"    let boardId = pm.collectionVariables.get(\"idBoard\");\r",
							"    pm.expect(response.idBoard).to.eql(boardId);\r",
							"});\r",
							"\r",
							"pm.test(\"Check votes and attachments\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.badges.votes).to.eql(0); \r",
							"    pm.expect(response.badges.attachments).to.eql(0);\r",
							"});\r",
							"\r",
							"// save card's id\r",
							"let response = pm.response.json();\r",
							"pm.collectionVariables.set(\"idCard_TODO\", response.id);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?key={{trelloKey}}&token={{trelloToken}}&idList={{idList_TODO}}&name=Learn Postman",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{idList_TODO}}"
						},
						{
							"key": "name",
							"value": "Learn Postman"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card from TODO to DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card's name\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.name).to.eql(\"Learn Postman\");\r",
							"});\r",
							"\r",
							"pm.test(\"Card's name\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.idList).to.eql(pm.collectionVariables.get(\"idList_DONE\"));\r",
							"});\r",
							"\r",
							"// save card's id\r",
							"let response = pm.response.json();\r",
							"pm.collectionVariables.set(\"idCard_DONE\", response.id);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/:idCard?key={{trelloKey}}&token={{trelloToken}}&idList={{idList_DONE}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						":idCard"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{idList_DONE}}"
						}
					],
					"variable": [
						{
							"key": "idCard",
							"value": "{{idCard_TODO}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:idBoard?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":idBoard"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "idBoard",
							"value": "{{idBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"let firstBoard = response.shift();\r",
							"console.log(response.length)\r",
							"if (firstBoard && firstBoard.name !== \"UNIVERSITY WORKS\"){\r",
							"    pm.collectionVariables.set(\"idBoard\", firstBoard.id);\r",
							"    postman.setNextRequest(\"Delete Board\");\r",
							"} else {\r",
							"    postman.setNextRequest(null)\r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/members/:{id}/boards?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						":{id}",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "{id}",
							"value": "yasharshh"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "idBoard",
			"value": ""
		},
		{
			"key": "idList_TODO",
			"value": ""
		},
		{
			"key": "idList_DONE",
			"value": ""
		},
		{
			"key": "idCard_TODO",
			"value": ""
		},
		{
			"key": "idCard_DONE",
			"value": ""
		}
	]
}